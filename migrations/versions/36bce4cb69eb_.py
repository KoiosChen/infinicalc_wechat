"""empty message

Revision ID: 36bce4cb69eb
Revises: dfbc3ddd2679
Create Date: 2020-04-25 09:07:03.174904

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '36bce4cb69eb'
down_revision = 'dfbc3ddd2679'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefits',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('with_amount', sa.Integer(), nullable=True, comment='满多少金额'),
    sa.Column('reduced_amount', sa.Integer(), nullable=True, comment='满xx后减多少钱，只能是整数'),
    sa.Column('discount_amount', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='满xx后的折扣'),
    sa.Column('with_quantity', sa.Integer(), nullable=True, comment='满多少件'),
    sa.Column('free_quantity', sa.SmallInteger(), nullable=True, comment='满xx送几件'),
    sa.Column('express_free', sa.SmallInteger(), nullable=True, comment='0: 不包邮, 1: 包邮'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1生效 2失效 3已结束'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotion_groups',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('group_id', sa.SmallInteger(), nullable=True, comment='组ID， 0 为特殊组，特殊组和任何组不互斥'),
    sa.Column('priority', sa.SmallInteger(), nullable=True, comment='1-10, 10优先级最低，当有组互斥时，使用优先级最高的，0优先级最高'),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('desc', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True, comment='促销活动名称'),
    sa.Column('first_order', sa.SmallInteger(), nullable=True, comment='0: 不是首单，1: 是首单'),
    sa.Column('reject_coupon', sa.SmallInteger(), nullable=True, comment='是否排斥优惠券，默认0不排斥，1排斥'),
    sa.Column('customer_level', sa.SmallInteger(), nullable=True, comment='用户等级，1为最低'),
    sa.Column('gender', sa.SmallInteger(), nullable=True, comment='参与的性别，默认为0'),
    sa.Column('age_min', sa.SmallInteger(), nullable=True, comment='参与最小年龄，默认为0'),
    sa.Column('age_max', sa.SmallInteger(), nullable=True, comment='参与最大年龄，默认为200'),
    sa.Column('promotion_type', sa.SmallInteger(), nullable=True, comment='促销类型'),
    sa.Column('accumulation', sa.SmallInteger(), nullable=True, comment='是否允许累积，默认为0，不允许。如果允许累加则为1。如果可以累加，则利益规则数量会大于'),
    sa.Column('scope', sa.SmallInteger(), nullable=True, comment='0：非全场，1: 全场， 2：线下'),
    sa.Column('used_in', sa.SmallInteger(), nullable=False, comment="可用于：10店铺优惠券 11新人店铺券  20商品优惠券  30类目优惠券  60平台优惠券 61新人平台券'"),
    sa.Column('with_special', sa.SmallInteger(), nullable=True, comment='1: 可用于特价商品 2: 不能。默认不能(商品优惠卷除外)'),
    sa.Column('start_time', sa.DateTime(), nullable=True, comment='活动开始时间'),
    sa.Column('end_time', sa.DateTime(), nullable=True, comment='活动结束时间'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1生效 2失效 3已结束'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions_benefits',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('benefits_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefits_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'benefits_id')
    )
    op.create_table('promotions_classifies',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('classifies_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['classifies_id'], ['classifies.id'], ),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'classifies_id')
    )
    op.create_table('promotions_brands',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('brands_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brands_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'brands_id')
    )
    op.create_table('promotions_spu',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('spu_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.ForeignKeyConstraint(['spu_id'], ['spu.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'spu_id')
    )
    op.create_table('gifts',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=True),
    sa.Column('discount', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='如果是0折，则为赠送，其它折扣，则为降价商品'),
    sa.Column('benefit', sa.String(length=64), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefit'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['sku'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions_sku',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'sku_id')
    )
    op.create_table('benefits_gifts',
    sa.Column('benefits_id', sa.String(length=64), nullable=False),
    sa.Column('gifts_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefits_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['gifts_id'], ['gifts.id'], ),
    sa.PrimaryKeyConstraint('benefits_id', 'gifts_id')
    )
    op.add_column('member_recharge_records', sa.Column('create_at', sa.DateTime(), nullable=True))
    op.add_column('member_recharge_records', sa.Column('member_card', sa.String(length=64), nullable=True))
    op.add_column('member_recharge_records', sa.Column('note', sa.String(length=200), nullable=True, comment='备注'))
    op.add_column('member_recharge_records', sa.Column('usable', sa.SmallInteger(), nullable=True, comment='0 不可用， 1 可用；例如开通会员卡的金额可设置为不可使用'))
    op.create_foreign_key(None, 'member_recharge_records', 'member_cards', ['member_card'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'member_recharge_records', type_='foreignkey')
    op.drop_column('member_recharge_records', 'usable')
    op.drop_column('member_recharge_records', 'note')
    op.drop_column('member_recharge_records', 'member_card')
    op.drop_column('member_recharge_records', 'create_at')
    op.drop_table('benefits_gifts')
    op.drop_table('promotions_sku')
    op.drop_table('gifts')
    op.drop_table('promotions_spu')
    op.drop_table('promotions_brands')
    op.drop_table('promotions_classifies')
    op.drop_table('promotions_benefits')
    op.drop_table('promotions')
    op.drop_table('promotion_groups')
    op.drop_table('benefits')
    # ### end Alembic commands ###
