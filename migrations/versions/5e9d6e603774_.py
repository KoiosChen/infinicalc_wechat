"""empty message

Revision ID: 5e9d6e603774
Revises: 
Create Date: 2020-08-07 13:44:11.743253

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5e9d6e603774'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefits',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('with_amount', sa.Integer(), nullable=True, comment='满多少金额'),
    sa.Column('reduced_amount', sa.Integer(), nullable=True, comment='满xx后减多少钱，只能是整数'),
    sa.Column('discount_amount', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='满xx后的折扣'),
    sa.Column('with_quantity', sa.Integer(), nullable=True, comment='满多少件'),
    sa.Column('free_quantity', sa.SmallInteger(), nullable=True, comment='满xx送几件'),
    sa.Column('pay_more', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='加价购，可选范围在gifts中，由pay_more_quantity来控制加价购可选商品数量'),
    sa.Column('pay_more_quantity', sa.SmallInteger(), nullable=True, comment='控制加价购数量'),
    sa.Column('combo_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='仅当活动类型是4时生效, 添加的sku为活动范围，添加的gifts为这个sku套餐的其它sku'),
    sa.Column('presell_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='当类型是5时， 设置预售定金'),
    sa.Column('presell_multiple', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='预售定金倍数，例如定金是10元，倍数是1.5，那么抵扣商品15元'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1生效 2失效 3已结束'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('classifies',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('longitude', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.String(length=20), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_countries_name'), 'countries', ['name'], unique=True)
    op.create_table('customer_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_customer_roles_default'), 'customer_roles', ['default'], unique=False)
    op.create_table('elements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('url', sa.String(length=250), nullable=True),
    sa.Column('order', sa.SmallInteger(), nullable=True),
    sa.Column('bg_color', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('permission', sa.String(length=100), nullable=True, comment='API接口权限'),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['elements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_elements_permission'), 'elements', ['permission'], unique=True)
    op.create_table('layout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False, comment='页面板块名称'),
    sa.Column('desc', sa.String(length=100), nullable=True, comment='描述、备注'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('obj_storage',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('bucket', sa.String(length=64), nullable=False),
    sa.Column('region', sa.String(length=64), nullable=False),
    sa.Column('obj_key', sa.String(length=64), nullable=False),
    sa.Column('obj_type', sa.SmallInteger(), nullable=True, comment='0 图片，1 视频， 2 文本'),
    sa.Column('url', sa.String(length=150), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('parent_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['obj_storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_obj_storage_bucket'), 'obj_storage', ['bucket'], unique=False)
    op.create_index(op.f('ix_obj_storage_obj_key'), 'obj_storage', ['obj_key'], unique=False)
    op.create_index(op.f('ix_obj_storage_region'), 'obj_storage', ['region'], unique=False)
    op.create_index(op.f('ix_obj_storage_url'), 'obj_storage', ['url'], unique=False)
    op.create_table('options_dic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('key', sa.String(length=80), nullable=False),
    sa.Column('label', sa.String(length=20), nullable=False),
    sa.Column('value', sa.String(length=5), nullable=False),
    sa.Column('order', sa.SmallInteger(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('selected', sa.Boolean(), nullable=True),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('memo', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', 'label', name='_key_label_combine')
    )
    op.create_index(op.f('ix_options_dic_key'), 'options_dic', ['key'], unique=False)
    op.create_index(op.f('ix_options_dic_label'), 'options_dic', ['label'], unique=False)
    op.create_index(op.f('ix_options_dic_name'), 'options_dic', ['name'], unique=False)
    op.create_index(op.f('ix_options_dic_value'), 'options_dic', ['value'], unique=False)
    op.create_table('promotion_groups',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('group_id', sa.SmallInteger(), nullable=True, comment='组ID， 0 为特殊组，特殊组和任何组不互斥'),
    sa.Column('priority', sa.SmallInteger(), nullable=True, comment='优先级不可重复，用于排序'),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('desc', sa.String(length=100), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('priority')
    )
    op.create_table('rebates',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True, comment='用来命名返佣表名称，例如‘封坛返佣’， 用来表示封坛类SKU的返佣，SKU表中外键关联此表'),
    sa.Column('member_type', sa.SmallInteger(), nullable=True, comment='0: 直客，1: 代理'),
    sa.Column('member_grade', sa.SmallInteger(), nullable=True, comment='1: 一级代理， 2： 二级代理；直客忽略此字段'),
    sa.Column('parent_grade', sa.SmallInteger(), nullable=True, comment='1 表示上级发展来的下级，0，表示平级或者下级发展来的代理'),
    sa.Column('self_rebate', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='填写百分比，譬如30.00, 表示返佣30%'),
    sa.Column('invitor_rebate', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='父级返佣比例'),
    sa.Column('grandinvitor_rebate', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='祖父级返佣比例'),
    sa.Column('share_second_level_rebate', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='链接分享成为上下级，分享者返佣比例，目前指分享成功且成为二级 5%'),
    sa.Column('share_first_level_bonus', sa.DECIMAL(precision=7, scale=2), nullable=True, comment='链接分享成为上下级，且成功邀请一个一级的奖金'),
    sa.Column('c_to_c_bonus_score', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='c to c 可获取的奖励积分, 这里的百分比是消费额的百分比作为积分'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rebates_group',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True, comment='返佣组的名称'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_roles_default'), 'roles', ['default'], unique=False)
    op.create_table('sms_app',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('app_id', sa.String(length=64), nullable=False),
    sa.Column('app_key', sa.String(length=64), nullable=False),
    sa.Column('platform', sa.String(length=100), nullable=False),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1正常；2暂停'),
    sa.Column('callback_url', sa.String(length=100), nullable=True, comment='短信回调URL'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sms_app_app_id'), 'sms_app', ['app_id'], unique=False)
    op.create_index(op.f('ix_sms_app_app_key'), 'sms_app', ['app_key'], unique=False)
    op.create_table('sms_sign',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('sign_id', sa.String(length=64), nullable=False),
    sa.Column('content', sa.String(length=140), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sms_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('template_id', sa.String(length=64), nullable=False),
    sa.Column('platform', sa.String(length=100), nullable=False),
    sa.Column('content', sa.String(length=140), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('standards',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_standards_name'), 'standards', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('true_name', sa.String(length=30), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('gender', sa.SmallInteger(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('banners',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False, comment='banner的名称'),
    sa.Column('order', sa.SmallInteger(), nullable=True, comment='排序，若相同则无序'),
    sa.Column('objects', sa.String(length=64), nullable=True),
    sa.Column('url', sa.String(length=200), nullable=True, comment='用于存放点击后跳转的链接'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['objects'], ['obj_storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_banners_name'), 'banners', ['name'], unique=False)
    op.create_table('brands',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('logo', sa.String(length=64), nullable=True),
    sa.Column('company_name', sa.String(length=100), nullable=True),
    sa.Column('company_address', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['logo'], ['obj_storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_brands_name'), 'brands', ['name'], unique=False)
    op.create_table('coupons',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False, comment='优惠券标题'),
    sa.Column('desc', sa.String(length=100), nullable=True, comment='优惠券描述'),
    sa.Column('icon', sa.String(length=64), nullable=True, comment='优惠券图标'),
    sa.Column('quota', sa.Integer(), nullable=True, comment='配额：发券数量'),
    sa.Column('per_user', sa.SmallInteger(), nullable=True, comment='每用户允许领取数量'),
    sa.Column('take_count', sa.Integer(), nullable=True, comment='已领取的优惠券数量'),
    sa.Column('used_count', sa.Integer(), nullable=True, comment='已使用的优惠券数量'),
    sa.Column('valid_type', sa.SmallInteger(), nullable=True, comment='时效:1绝对时效（领取后XXX-XXX时间段有效）  2相对时效（领取后N天有效）'),
    sa.Column('valid_days', sa.Integer(), nullable=True, comment='自领取之日起有效天数'),
    sa.Column('absolute_date', sa.DateTime(), nullable=True, comment='优惠券的绝对结束日期，当valid_type为1时，此项不能为空'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1生效 2失效 3已结束'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['icon'], ['obj_storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('openid', sa.String(length=64), nullable=True),
    sa.Column('unionid', sa.String(length=64), nullable=True),
    sa.Column('session_key', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('true_name', sa.String(length=30), nullable=True),
    sa.Column('level', sa.SmallInteger(), nullable=True, comment='用户等级'),
    sa.Column('total_points', sa.Integer(), nullable=True, comment='用户积分'),
    sa.Column('total_consumption', sa.DECIMAL(precision=7, scale=2), nullable=True, comment='累积消费'),
    sa.Column('total_count', sa.Integer(), nullable=True, comment='累积消费次数'),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('gender', sa.SmallInteger(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1: 正常 0: 删除'),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('profile_photo', sa.String(length=64), nullable=True),
    sa.Column('parent_id', sa.String(length=64), nullable=True, comment='邀请者，分享小程序入口之后的级联关系写在invitor中'),
    sa.Column('invitor_id', sa.String(length=64), nullable=True, comment='代理商邀请'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invitor_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['profile_photo'], ['obj_storage.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['customer_roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=False)
    op.create_index(op.f('ix_customers_openid'), 'customers', ['openid'], unique=False)
    op.create_index(op.f('ix_customers_phone'), 'customers', ['phone'], unique=False)
    op.create_index(op.f('ix_customers_session_key'), 'customers', ['session_key'], unique=True)
    op.create_index(op.f('ix_customers_unionid'), 'customers', ['unionid'], unique=False)
    op.create_index(op.f('ix_customers_username'), 'customers', ['username'], unique=False)
    op.create_table('evaluates',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('express_rate', sa.SmallInteger(), nullable=True, comment='物流评价0~10'),
    sa.Column('item_rate', sa.SmallInteger(), nullable=True, comment='商品评价0~10'),
    sa.Column('content', sa.Text(length=4294967295), nullable=True),
    sa.Column('used_pic', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['used_pic'], ['obj_storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provinces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('longitude', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.String(length=20), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provinces_name'), 'provinces', ['name'], unique=True)
    op.create_table('rebatesgroup_rebate',
    sa.Column('rebatesgroup_id', sa.String(length=64), nullable=False),
    sa.Column('rebates_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rebates_id'], ['rebates.id'], ),
    sa.ForeignKeyConstraint(['rebatesgroup_id'], ['rebates_group.id'], ),
    sa.PrimaryKeyConstraint('rebatesgroup_id', 'rebates_id')
    )
    op.create_table('roles_elements',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('element_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['element_id'], ['elements.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'element_id')
    )
    op.create_table('standard_value',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('standard_id', sa.String(length=64), nullable=True),
    sa.Column('value', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['standard_id'], ['standards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_standard_value_value'), 'standard_value', ['value'], unique=True)
    op.create_table('user_role',
    sa.Column('user_id', sa.String(length=64), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('longitude', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.String(length=20), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('province_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['province_id'], ['provinces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cities_name'), 'cities', ['name'], unique=True)
    op.create_table('coupon_ready',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('coupon_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='0: 作废，1：已领取未使用，2：已使用'),
    sa.Column('take_at', sa.DateTime(), nullable=True),
    sa.Column('use_at', sa.DateTime(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('consumer', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['consumer'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_role',
    sa.Column('customer_id', sa.String(length=64), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('customer_id', 'role_id')
    )
    op.create_table('login_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('login_time', sa.Integer(), nullable=False),
    sa.Column('platform', sa.String(length=20), nullable=False),
    sa.Column('login_ip', sa.String(length=64), nullable=True),
    sa.Column('user', sa.String(length=64), nullable=True),
    sa.Column('customer', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member_cards',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('card_no', sa.String(length=50), nullable=False, comment='会员卡号'),
    sa.Column('member_type', sa.SmallInteger(), nullable=True, comment='会员类型， 0为普通C端会员； 1 为代理商'),
    sa.Column('customer_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='会员卡状态 0: 禁用， 1：正常, 2：挂失'),
    sa.Column('grade', sa.SmallInteger(), nullable=True, comment='会员卡等级，在OptionsDict表中查找card_grades来获取对应的文字描述.默认为1'),
    sa.Column('invitor_id', sa.String(length=64), nullable=True),
    sa.Column('invitor_grade', sa.SmallInteger(), nullable=True, comment='1,上级发展下级；0 下级或者评价发展成为的代理'),
    sa.Column('discount', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='会员折扣'),
    sa.Column('shop_id', sa.String(length=64), nullable=True, comment='预留，对于店铺发店铺会员卡，目前会员卡为商城全局'),
    sa.Column('open_date', sa.DateTime(), nullable=True, comment='开卡日期'),
    sa.Column('validate_date', sa.DateTime(), nullable=True, comment='卡有效期'),
    sa.Column('note', sa.String(length=100), nullable=True, comment='备注'),
    sa.Column('creator_id', sa.String(length=64), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True, comment='如果不为空，则表示软删除'),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['invitor_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True, comment='促销活动名称'),
    sa.Column('first_order', sa.SmallInteger(), nullable=True, comment='0: 不是首单，1: 首单, 用户首单参加活动'),
    sa.Column('reject_coupon', sa.SmallInteger(), nullable=True, comment='是否排斥优惠券，默认0不排斥，1排斥'),
    sa.Column('customer_level', sa.SmallInteger(), nullable=True, comment='用户等级，1为最低'),
    sa.Column('gender', sa.SmallInteger(), nullable=True, comment='参与的性别，默认为0， 1为男性、2为女性'),
    sa.Column('age_min', sa.SmallInteger(), nullable=True, comment='参与最小年龄，默认为0'),
    sa.Column('age_max', sa.SmallInteger(), nullable=True, comment='参与最大年龄，默认为200'),
    sa.Column('promotion_type', sa.SmallInteger(), nullable=True, comment='0: 满减，1：满赠，2：满折，3：加价购，4：套餐，5：预售, 6：秒杀, 7: 满减优惠券, 8: 满赠优惠券'),
    sa.Column('express_free', sa.SmallInteger(), nullable=True, comment='0: 不包邮, 1: 包邮'),
    sa.Column('accumulation', sa.SmallInteger(), nullable=True, comment='是否允许累积，默认为0，不允许。如果允许累加则为1。如果可以累加，则利益规则数量会大于'),
    sa.Column('scope', sa.SmallInteger(), nullable=True, comment='0：非全场，1: 全场， 2：线下'),
    sa.Column('group', sa.String(length=64), nullable=True, comment='group_id 为-1表示是发优惠券，>=0的group，为活动'),
    sa.Column('with_special', sa.SmallInteger(), nullable=True, comment='1: 可用于特价商品 0: 不能。默认不能(商品优惠卷除外)'),
    sa.Column('start_time', sa.DateTime(), nullable=True, comment='活动开始时间'),
    sa.Column('end_time', sa.DateTime(), nullable=True, comment='活动结束时间'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1生效 2失效 3已结束'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('coupon_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['coupon_id'], ['coupons.id'], ),
    sa.ForeignKeyConstraint(['group'], ['promotion_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_promotions_name'), 'promotions', ['name'], unique=True)
    op.create_table('spu',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('sub_name', sa.String(length=100), nullable=True),
    sa.Column('express_fee', sa.DECIMAL(precision=4, scale=2), nullable=True, comment='邮费，默认0元'),
    sa.Column('contents', sa.Text(length=4294967295), nullable=True),
    sa.Column('brand_id', sa.String(length=64), nullable=True),
    sa.Column('classify_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1 上架； 0 下架'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['classify_id'], ['classifies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_spu_name'), 'spu', ['name'], unique=False)
    op.create_table('districts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('longitude', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.String(length=20), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_districts_name'), 'districts', ['name'], unique=True)
    op.create_table('invitation_code',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('tobe_type', sa.SmallInteger(), nullable=True, comment='邀请后成为的类型，对应member_cards中的member_type'),
    sa.Column('tobe_level', sa.SmallInteger(), nullable=True, comment='邀请后成为的等级，对应member_cards中的grade'),
    sa.Column('code', sa.String(length=64), nullable=True, comment='邀请码'),
    sa.Column('manager_customer_id', sa.String(length=64), nullable=True, comment='管理者ID'),
    sa.Column('used_customer_id', sa.String(length=64), nullable=True, comment='使用者ID'),
    sa.Column('new_member_card_id', sa.String(length=64), nullable=True, comment='开卡id'),
    sa.Column('creator_id', sa.String(length=64), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('validity_at', sa.DateTime(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True, comment='如果不为空，则表示已经使用，软删除'),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['manager_customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['new_member_card_id'], ['member_cards.id'], ),
    sa.ForeignKeyConstraint(['used_customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('member_recharge_records',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('recharge_amount', sa.DECIMAL(precision=7, scale=2), nullable=True, comment='充值金额'),
    sa.Column('member_card', sa.String(length=64), nullable=True),
    sa.Column('note', sa.String(length=200), nullable=True, comment='备注'),
    sa.Column('usable', sa.SmallInteger(), nullable=True, comment='0 不可用， 1 可用；例如开通会员卡的金额可设置为不可使用'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['member_card'], ['member_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('point_records',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('source_type', sa.SmallInteger(), nullable=True, comment='1: 订单, 提在字典表中，查询point_records获取'),
    sa.Column('source_id', sa.String(length=64), nullable=True, comment='积分源ID'),
    sa.Column('card_id', sa.String(length=64), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=True, comment='1: 增长， 2: 消费，3: 罚扣'),
    sa.Column('points', sa.Integer(), nullable=True, comment='积分数'),
    sa.Column('note', sa.String(length=100), nullable=True, comment='预留给客服做备注'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['member_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions_benefits',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('benefits_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefits_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'benefits_id')
    )
    op.create_table('promotions_brands',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('brands_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brands_id'], ['brands.id'], ),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'brands_id')
    )
    op.create_table('promotions_classifies',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('classifies_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['classifies_id'], ['classifies.id'], ),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'classifies_id')
    )
    op.create_table('promotions_spu',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('spu_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.ForeignKeyConstraint(['spu_id'], ['spu.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'spu_id')
    )
    op.create_table('sku',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('show_price', sa.String(length=13), nullable=True, comment='显示价格， 当special不为0时，显示此价格，并且用删除线'),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('seckill_price', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='当SKU参加秒杀活动时，设置秒杀价格写在这个字段，如果不为0， 则表示参加秒杀，查找秒杀活动'),
    sa.Column('discount', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('member_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('score_type', sa.SmallInteger(), nullable=True, comment='是否可用积分'),
    sa.Column('score', sa.Integer(), nullable=True, comment='积分'),
    sa.Column('contents', sa.Text(length=4294967295), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('spu_id', sa.String(length=64), nullable=True),
    sa.Column('unit', sa.String(length=6), nullable=False),
    sa.Column('special', sa.SmallInteger(), nullable=True, comment='0 非特价商品，1 特价商品， 2 赠品，不可单独销售'),
    sa.Column('per_user', sa.SmallInteger(), nullable=True, comment='设置限购量，默认为0不限购，一般在特价，秒杀折扣时使用'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1 上架； 0 下架'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.Column('could_get_coupon_id', sa.String(length=64), nullable=True, comment='如果是直客，那么可以设置获取优惠券'),
    sa.ForeignKeyConstraint(['could_get_coupon_id'], ['coupons.id'], ),
    sa.ForeignKeyConstraint(['spu_id'], ['spu.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sku_name'), 'sku', ['name'], unique=False)
    op.create_index(op.f('ix_sku_quantity'), 'sku', ['quantity'], unique=False)
    op.create_table('spu_obj',
    sa.Column('spu_id', sa.String(length=64), nullable=False),
    sa.Column('obj_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['obj_id'], ['obj_storage.id'], ),
    sa.ForeignKeyConstraint(['spu_id'], ['spu.id'], ),
    sa.PrimaryKeyConstraint('spu_id', 'obj_id')
    )
    op.create_table('spu_standards',
    sa.Column('spu_id', sa.String(length=64), nullable=False),
    sa.Column('standards_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['spu_id'], ['spu.id'], ),
    sa.ForeignKeyConstraint(['standards_id'], ['standards.id'], ),
    sa.PrimaryKeyConstraint('spu_id', 'standards_id')
    )
    op.create_table('express_address',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True, comment='目前不用，后续拆分地址后存放城市id'),
    sa.Column('district', sa.Integer(), nullable=True, comment='目前不用，后续拆分地址后存放区id'),
    sa.Column('address1', sa.String(length=100), nullable=True, comment='某某路xx号xx栋xx门牌号'),
    sa.Column('address2', sa.String(length=100), nullable=True),
    sa.Column('postcode', sa.String(length=10), nullable=True, comment='邮编'),
    sa.Column('recipients', sa.String(length=50), nullable=True, comment='收件人'),
    sa.Column('recipients_phone', sa.String(length=20), nullable=True, comment='收件人电话'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1：正常 0：删除'),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['district'], ['districts.id'], ),
    sa.ForeignKeyConstraint(['sender'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gifts',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=True),
    sa.Column('discount', sa.DECIMAL(precision=3, scale=2), nullable=True, comment='如果是0折，则为赠送，其它折扣，则为降价商品'),
    sa.Column('benefit', sa.String(length=64), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefit'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['sku'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('promotions_sku',
    sa.Column('promotions_id', sa.String(length=64), nullable=False),
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['promotions_id'], ['promotions.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('promotions_id', 'sku_id')
    )
    op.create_table('purchase_info',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('sku_id', sa.String(length=64), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('operator', sa.String(length=64), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1 正常 0 作废'),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('memo', sa.String(length=200), nullable=True, comment='备忘，例如作废原因'),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shopping_cart',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('customer_id', sa.String(length=64), nullable=True),
    sa.Column('sku_id', sa.String(length=64), nullable=True),
    sa.Column('quantity', sa.SmallInteger(), nullable=True, comment='购买的数量'),
    sa.Column('combo', sa.String(length=64), nullable=True, comment='前端页面选择的combo，实质为这个套餐中的一种，为benefits表的id'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='预留，默认为1，则显示在购物车中，如果为0， 则作为想买货物，不在购物车内'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['combo'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sku_layout',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('layout_id', sa.Integer(), nullable=True),
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True, comment='排序'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='0 禁用 1 正常'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['layout_id'], ['layout.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sku_obj',
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('obj_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['obj_id'], ['obj_storage.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('sku_id', 'obj_id')
    )
    op.create_table('sku_rebatesgroup',
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('rebates_group', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rebates_group'], ['rebates_group.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('sku_id', 'rebates_group')
    )
    op.create_table('sku_standardvalue',
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('standardvalue_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.ForeignKeyConstraint(['standardvalue_id'], ['standard_value.id'], ),
    sa.PrimaryKeyConstraint('sku_id', 'standardvalue_id')
    )
    op.create_table('benefits_gifts',
    sa.Column('benefits_id', sa.String(length=64), nullable=False),
    sa.Column('gifts_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['benefits_id'], ['benefits.id'], ),
    sa.ForeignKeyConstraint(['gifts_id'], ['gifts.id'], ),
    sa.PrimaryKeyConstraint('benefits_id', 'gifts_id')
    )
    op.create_table('shop_orders',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('customer_id', sa.String(length=64), nullable=True),
    sa.Column('trade_sn', sa.String(length=64), nullable=True, comment='微信支付的交易号'),
    sa.Column('items_total_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('score_used', sa.Integer(), nullable=True, comment='使用的积分'),
    sa.Column('is_pay', sa.SmallInteger(), nullable=True, comment='默认0. 0：未支付， 1：完成支付， 2：支付失败'),
    sa.Column('pay_time', sa.DateTime(), nullable=True, comment='支付时间'),
    sa.Column('is_ship', sa.SmallInteger(), nullable=True, comment='0：未发货，1：已发货'),
    sa.Column('ship_time', sa.DateTime(), nullable=True, comment='发货时间'),
    sa.Column('receive_time', sa.DateTime(), nullable=True, comment='收货时间'),
    sa.Column('is_receipt', sa.SmallInteger(), nullable=True, comment='0：未发货 1：已发货未签收 2：已发货已签收'),
    sa.Column('express_company', sa.String(length=50), nullable=True),
    sa.Column('express_number', sa.String(length=50), nullable=True),
    sa.Column('express_fee', sa.DECIMAL(precision=7, scale=2), nullable=True),
    sa.Column('express_address', sa.String(length=64), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='1：正常 2：禁用 0：订单取消'),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.Column('message', sa.String(length=500), nullable=True, comment='用户留言'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['express_address'], ['express_address.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items_orders',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('order_id', sa.String(length=64), nullable=True),
    sa.Column('item_id', sa.String(length=64), nullable=True),
    sa.Column('item_quantity', sa.Integer(), nullable=True),
    sa.Column('item_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('activity_discount', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.Column('update_at', sa.DateTime(), nullable=True),
    sa.Column('delete_at', sa.DateTime(), nullable=True),
    sa.Column('rates', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['sku.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['shop_orders.id'], ),
    sa.ForeignKeyConstraint(['rates'], ['evaluates.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('shop_order_status',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('shop_order_id', sa.String(length=64), nullable=True),
    sa.Column('customer_id', sa.String(length=64), nullable=True),
    sa.Column('character', sa.SmallInteger(), nullable=True, comment='0: 购买者； 1: 代理关系上级 2: '),
    sa.Column('member_type', sa.SmallInteger(), nullable=True, comment='付款是用户的类型'),
    sa.Column('member_level', sa.SmallInteger(), nullable=True, comment='付款时用户的级别'),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['shop_order_id'], ['shop_orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sku_shoporders',
    sa.Column('sku_id', sa.String(length=64), nullable=False),
    sa.Column('shoporders_id', sa.String(length=64), nullable=False),
    sa.Column('create_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['shoporders_id'], ['shop_orders.id'], ),
    sa.ForeignKeyConstraint(['sku_id'], ['sku.id'], ),
    sa.PrimaryKeyConstraint('sku_id', 'shoporders_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sku_shoporders')
    op.drop_table('shop_order_status')
    op.drop_table('items_orders')
    op.drop_table('shop_orders')
    op.drop_table('benefits_gifts')
    op.drop_table('sku_standardvalue')
    op.drop_table('sku_rebatesgroup')
    op.drop_table('sku_obj')
    op.drop_table('sku_layout')
    op.drop_table('shopping_cart')
    op.drop_table('purchase_info')
    op.drop_table('promotions_sku')
    op.drop_table('gifts')
    op.drop_table('express_address')
    op.drop_table('spu_standards')
    op.drop_table('spu_obj')
    op.drop_index(op.f('ix_sku_quantity'), table_name='sku')
    op.drop_index(op.f('ix_sku_name'), table_name='sku')
    op.drop_table('sku')
    op.drop_table('promotions_spu')
    op.drop_table('promotions_classifies')
    op.drop_table('promotions_brands')
    op.drop_table('promotions_benefits')
    op.drop_table('point_records')
    op.drop_table('member_recharge_records')
    op.drop_table('invitation_code')
    op.drop_index(op.f('ix_districts_name'), table_name='districts')
    op.drop_table('districts')
    op.drop_index(op.f('ix_spu_name'), table_name='spu')
    op.drop_table('spu')
    op.drop_index(op.f('ix_promotions_name'), table_name='promotions')
    op.drop_table('promotions')
    op.drop_table('member_cards')
    op.drop_table('login_info')
    op.drop_table('customer_role')
    op.drop_table('coupon_ready')
    op.drop_index(op.f('ix_cities_name'), table_name='cities')
    op.drop_table('cities')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_standard_value_value'), table_name='standard_value')
    op.drop_table('standard_value')
    op.drop_table('roles_elements')
    op.drop_table('rebatesgroup_rebate')
    op.drop_index(op.f('ix_provinces_name'), table_name='provinces')
    op.drop_table('provinces')
    op.drop_table('evaluates')
    op.drop_index(op.f('ix_customers_username'), table_name='customers')
    op.drop_index(op.f('ix_customers_unionid'), table_name='customers')
    op.drop_index(op.f('ix_customers_session_key'), table_name='customers')
    op.drop_index(op.f('ix_customers_phone'), table_name='customers')
    op.drop_index(op.f('ix_customers_openid'), table_name='customers')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_table('customers')
    op.drop_table('coupons')
    op.drop_index(op.f('ix_brands_name'), table_name='brands')
    op.drop_table('brands')
    op.drop_index(op.f('ix_banners_name'), table_name='banners')
    op.drop_table('banners')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_standards_name'), table_name='standards')
    op.drop_table('standards')
    op.drop_table('sms_template')
    op.drop_table('sms_sign')
    op.drop_index(op.f('ix_sms_app_app_key'), table_name='sms_app')
    op.drop_index(op.f('ix_sms_app_app_id'), table_name='sms_app')
    op.drop_table('sms_app')
    op.drop_index(op.f('ix_roles_default'), table_name='roles')
    op.drop_table('roles')
    op.drop_table('rebates_group')
    op.drop_table('rebates')
    op.drop_table('promotion_groups')
    op.drop_index(op.f('ix_options_dic_value'), table_name='options_dic')
    op.drop_index(op.f('ix_options_dic_name'), table_name='options_dic')
    op.drop_index(op.f('ix_options_dic_label'), table_name='options_dic')
    op.drop_index(op.f('ix_options_dic_key'), table_name='options_dic')
    op.drop_table('options_dic')
    op.drop_index(op.f('ix_obj_storage_url'), table_name='obj_storage')
    op.drop_index(op.f('ix_obj_storage_region'), table_name='obj_storage')
    op.drop_index(op.f('ix_obj_storage_obj_key'), table_name='obj_storage')
    op.drop_index(op.f('ix_obj_storage_bucket'), table_name='obj_storage')
    op.drop_table('obj_storage')
    op.drop_table('layout')
    op.drop_index(op.f('ix_elements_permission'), table_name='elements')
    op.drop_table('elements')
    op.drop_index(op.f('ix_customer_roles_default'), table_name='customer_roles')
    op.drop_table('customer_roles')
    op.drop_index(op.f('ix_countries_name'), table_name='countries')
    op.drop_table('countries')
    op.drop_table('classifies')
    op.drop_table('benefits')
    # ### end Alembic commands ###
